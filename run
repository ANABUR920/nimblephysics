#!/usr/bin/env bash
set -e

image_name=jslee02/diffdart-dev
diffdart_version=v0.0

base_os_name_and_tag="ubuntu-focal"
code_coverage=false
compiler=gcc
sha256=""
num_cores=1
memcheck=false
build_python=ON
build_doc=OFF

help() {
  cat <<EOF
  Usage: ${0##*/} <routine> [<options>...]
EOF
}

if [ "$#" -lt 1 ]; then
  help
  exit
else
  if [[ "$1" = -* ]]; then
    help
    exit
  else
    routine=$1
    shift
  fi
fi

POSITIONAL=()
while [[ $# -gt 0 ]]; do
  key="$1"

  case $key in
  -n | --name)
    base_os_name_and_tag=("$2")
    shift # past argument
    shift # past value
    ;;
  -s | --sha256)
    sha256=("$2")
    shift # past argument
    shift # past value
    ;;
  --compiler)
    compiler=("$2")
    shift # past argument
    shift # past value
    ;;
  -j)
    num_cores=("$2")
    shift # past argument
    shift # past value
    ;;
  -m | --memcheck)
    run_memcheck="true"
    shift # past argument
    ;;
  --no-python)
    build_python=OFF
    shift # past argument
    ;;
  --build-doc)
    build_doc=ON
    shift # past argument
    ;;
  -c | --coverage)
    code_coverage=true
    shift # past argument
    ;;
  *)                   # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift              # past argument
    ;;
  esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

code_coverage_args=""
if [ "$code_coverage" = "true" ]; then
  code_coverage_args="$code_coverage_args $(bash <(curl -s https://codecov.io/env))"
  code_coverage_args="$code_coverage_args --env ENABLE_CODECOV=ON"
fi

if [ "$run_memcheck" = "true" ]; then
  code_coverage_args="$code_coverage_args --env RUN_MEMCHECK=ON"
else
  code_coverage_args="$code_coverage_args --env RUN_MEMCHECK=OFF"
fi

launch() {
  if [ -z $sha256 ]; then
    sha_arg=""
  else
    sha_arg="@sha256:$sha256"
  fi

  echo "==================================================="
  echo " Launching $image_name:$base_os_name_and_tag-$diffdart_version$sha_arg..."
  echo "==================================================="

  docker run \
    -it \
    $code_coverage_args \
    --privileged \
    --volume $(pwd):/opt/diffdart \
    -t $image_name:$base_os_name_and_tag-$diffdart_version$sha_arg \
    /bin/bash

  echo "Done"
  echo ""
}

build() {
  if [ -z $sha256 ]; then
    sha_arg=""
    build_dir=".build/$base_os_name_and_tag-$diffdart_version-$compiler"
  else
    sha_arg="@sha256:$sha256"
    build_dir=".build/$base_os_name_and_tag-$diffdart_version-$compiler-$sha256"
  fi

  echo "==================================================="
  echo " Building $image_name:$base_os_name_and_tag-$diffdart_version$sha_arg..."
  echo "==================================================="

  # todo: make BUILD_TYPE and ENABLE_CODECOV configurable
  # todo: check if CODECOV_TOKEN is set when code_coverage==true
  docker run \
    -i \
    $code_coverage_args \
    --privileged \
    --volume $(pwd):/opt/diffdart \
    --env BUILD_TYPE=Debug \
    --env CMAKE_BUILD_DIR=$build_dir \
    --env BUILD_PYTHON=$build_python \
    --env COMPILER=$compiler \
    -t $image_name:$base_os_name_and_tag-$diffdart_version$sha_arg \
    /bin/bash -c "cd /opt/diffdart && ./.ci/build.sh -j$num_cores"

  echo "Done"
  echo ""
}

# Run the selected routine
"$routine"
